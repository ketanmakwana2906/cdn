@classmethod
    def generate_data(cls, request, ta_obj, status, chart_prepared):
        try:
            customer_support = ta_obj.customer_support
            cnf_text = [
                {
                    "title": "Train Ticket is confirmed",
                    "sub-title": "Premium amount of Rs <b>{} is initiated to your TM wallet</b>, it will be refunded to your wallet in 24 hours.".format(ta_obj.ta_charge),
                    "status": 'completed' if status.lower()=='cnf' else 'pending'
                }
            ]
            final_cnf_text = [
                {
                    "title": "We have processed Rs {} to your TM wallet".format(ta_obj.ta_charge),
                    "sub-title": "",
                    "status": 'completed' if customer_support.tm_refunded else 'pending'
                }
            ]

            wl_text = [
                {
                    "title": "Train Ticket is waitlisted",
                    "sub-title": "You are eligible for flight ticket , Our customer team will contact you shortly.",
                    "status": 'completed' if (status.lower()=='wl' and chart_prepared) else 'pending'
                },
                {
                    "title": "Customer team contacted",
                    "sub-title": cls.__get_wl_customer_team_contacted_sub_title(ta_obj, customer_support, status, chart_prepared),
                    "status": 'completed' if customer_support.cs_contacted else 'pending'
                },
                {
                    "title": "Trip assurance is processing",
                    "sub-title": cls.__get_wl_customer_support_ta_processing_sub_title(ta_obj, customer_support, status, chart_prepared),
                    "status": cls.__get_wl_customer_support_ta_processing_status(ta_obj, customer_support, status, chart_prepared)
                },
            ]

            final_wl_text = [
                {
                    "title": cls.__get_wl_final_text(ta_obj, customer_support, status, chart_prepared),
                    "sub-title": "",
                    "status": cls.__get_wl_customer_support_ta_processing_status(ta_obj, customer_support, status, chart_prepared)
                }
            ]

            data = {
                "cnf": cnf_text,
                "wl": wl_text,
                "final_status": {
                    "cnf": final_cnf_text,
                    "wl": final_wl_text
                },
                "ta_fee": ta_obj.ta_charge,
                "tm_fee_processed": customer_support.tm_refunded,
                "flight_booked": TripAssuranceFlight.objects.filter(tm_booking_id=ta_obj.tm_booking_id).exists(),
                "contact-no": "+919986702216",
                "conclusive": cls.__get_conclusive_obj(ta_obj, customer_support, status, chart_prepared),
                "show_wallet_link": cls.__get_show_wallet_link_status(ta_obj, customer_support, status, chart_prepared)
            }
            error = ""
        except Exception as e:
            data = {}
            error = str(e)

        return data, error

