errors = []
class CustomOAuth2Validator(OAuth2Validator):
    def validate_user(self, username, password, client, request, *args, **kwargs):
        errors.clear()
        u = authenticate(username=username, password=password, errors=errors)
        if u is not None and u.is_active:
            request.user = u
            return True
        return False

class CustomTokenView(TokenView):
    validator_class = CustomOAuth2Validator
    def post(self, request, *args, **kwargs):
        response = super().post(request, *args, **kwargs)
        if response.status_code == 401:
