from collections import defaultdict

# Sample API response with multiple routes
irctc_responses = {
    "NDLS-SBIB": {
        "trainBtwnStnsList": [
            {"fromStnCode": "DLI", "toStnCode": "SBIB"},
            {"fromStnCode": "NDLS", "toStnCode": "SBIB"},
            {"fromStnCode": "DLI", "toStnCode": "SBIB"},
            {"fromStnCode": "DSA", "toStnCode": "SBIB"},
            {"fromStnCode": "DLI", "toStnCode": "CLDY"},
            {"fromStnCode": "DEE", "toStnCode": "ADI"},
            {"fromStnCode": "DLI", "toStnCode": "CLDY"}
        ]
    },
    "NDLS-ADI": {
        "trainBtwnStnsList": [
            {"fromStnCode": "DLI", "toStnCode": "SBIB"},
            {"fromStnCode": "NDLS", "toStnCode": "SBIB"},
            {"fromStnCode": "DLI", "toStnCode": "SBIB"},
            {"fromStnCode": "DSA", "toStnCode": "SBIB"},
            {"fromStnCode": "DLI", "toStnCode": "CLDY"},
            {"fromStnCode": "DEE", "toStnCode": "ADI"},
            {"fromStnCode": "DLI", "toStnCode": "CLDY"}
        ]
    },
    # Add more responses here...
}
cluster = {}
for route , data in irctc_responses.items():
    print("data is",data)
    from_and_to = route.split('-')
    all_from = []
    all_to = []
    for i in data["trainBtwnStnsList"]:
        from_st = i["fromStnCode"]
        to_st = i["toStnCode"]
        if from_st not in all_from:
            all_from.append(i["fromStnCode"])
        if to_st not in all_to:
            all_to.append(i["toStnCode"])
    cluster[from_and_to[0]] = all_from
    cluster[from_and_to[1]] = all_to

print(cluster)

in above we get clusters like
{'NDLS': ['DLI', 'NDLS', 'DSA', 'DEE'], 'SBIB': ['SBIB', 'CLDY', 'ADI'], 'ADI': ['SBIB', 'CLDY', 'ADI']}

now want to merge for efficient 
like ADI already exist in one of list like in SBIB so put all ADI in that SBIB
