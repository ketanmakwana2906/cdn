def blog_list(request):
    params = validate_request(request)
    blogs = views.get_blog_list()[:50]
    all_blogs = []
    for blog in blogs:
        this_blog = {
                'title': blog.title,
                'slug': blog.slug,
                'shortDescription': blog.short_description,
                'views': blog.views,
                'author': str(blog.written_by),
                'category': str(blog.category),
                'headerImage': blog.get_header_image_url(),
                'createdOn': blog.created_on,
                }
        all_blogs.append(this_blog)
    response = {'blogs': all_blogs, 'success': True}
    return JsonResponse(response)

def blog_detail(request):
    params = validate_request(request)
    slug = request.GET.get('id')
    current_blog, next_blog, prev_blog, random_blogs = views.get_blog_page(slug)
    this_blog = {
            'title': current_blog.title,
            'slug': current_blog.slug,
            'shortDescription': current_blog.short_description,
            'content': appify(current_blog.content),
            #'content': current_blog.content,
            'keywords': current_blog.tags,
            'views': current_blog.views,
            'author': str(current_blog.written_by),
            'category': str(current_blog.category),
            'headerImage': current_blog.get_header_image_url(),
            'createdOn': current_blog.created_on,
            }

    response = {
            'blog': this_blog, 
            'next': next_blog.slug if next_blog else None, 
            'prev':prev_blog.slug if prev_blog else None,
            'random': [{
                'slug': blog.slug,
                'title': blog.title,
                'desc': blog.short_description,
                'views': blog.views,
                'image': blog.get_header_image_url(),
                } 
                for blog in random_blogs],
            'success': True,
            }
    return JsonResponse(response)
