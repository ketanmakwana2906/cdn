from base64 import urlsafe_b64decode
from Cryptodome.Cipher import AES
from Cryptodome.Random import get_random_bytes

def decode_b64_key(encoded_key):
    byte_key = encoded_key.encode('utf-8')
    missing_padding = 4 - len(byte_key) % 4
    if missing_padding:
        byte_key += b'=' * missing_padding
    return urlsafe_b64decode(byte_key)

def encrypt(querystring, wa_encryption_key):
    nonce = get_random_bytes(12)
    decoded_key = decode_b64_key(wa_encryption_key)
    bytes_text = querystring.encode('utf-8')
    cipher = AES.new(decoded_key, AES.MODE_GCM, nonce=nonce, mac_len=16)
    ciphertext, tag = cipher.encrypt_and_digest(bytes_text)
    finalbytesbuffer = b''.join([nonce, ciphertext, tag])
    return urlsafe_b64encode(finalbytesbuffer).decode('utf-8')

wa_encryption_key = 'SImLkqCvISgBPuT25TZILXTZkW9Rkv1WjER-g_Kcd6E'
decoded_key = decode_b64_key(wa_encryption_key)
print(decoded_key)

# Example usage for new data
querystring = "password=56RW8FEM&send_to=9891227480&v=1.1&format=json&msg_type=TEXT&method=SENDMESSAGE&msg=Test&isTemplate=true"
encrypted_data = encrypt(querystring, wa_encryption_key)
print(encrypted_data)
